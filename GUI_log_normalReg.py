# -------- ResIPy log file -------

k.showError(index=0)
k.showErrorDist(index=0)
# k.filterManual(index=0, attr="resist" # interactive plot)
k.showPseudo()
k.loadProject("/home/ben/Documents/GitHub/BenjMy/Salorno_river/GUI_proj.resipy")
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
# k.filterManual(index=-1, attr="resist" # interactive plot)
# k.filterManual(index=-1, attr="app" # interactive plot)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
# k.filterManual(index=-1, attr="dev" # interactive plot)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
k.filterUnpaired(index=-1)
k.showErrorDist(index=-1)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
k.showError(index=0)
# k.filterManual(index=-1, attr="dev" # interactive plot)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
k.filterUnpaired(index=-1)
k.showErrorDist(index=-1)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
k.showError(index=0)
k.filterUnpaired(index=-1)
k.showErrorDist(index=-1)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
k.showError(index=0)
# k.filterManual(index=0, attr="reciprocalErrRel" # interactive plot)
k.showErrorDist(index=0)
k.showErrorDist(index=-1)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
k.showError(index=0)
k.filterRecip(index=-1, percent=10.000000)
k.showErrorDist(index=-1)
# k.filterManual(index=-1, attr="reciprocalErrRel" # interactive plot)
k.showError(index=0)
k.param["reg_mode"] = 0
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=8.00, cln_factor=100.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=8.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=8.00, cln_factor=1.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=8.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=8.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=20.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=10.0, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=40.0, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=30.0, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=20.0, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=25.0, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=24.0, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=24.0, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.createMesh(typ="tetra", surface=None, fmd=None, cl=-1.00, cl_factor=10.00, cln_factor=10.00, refine=0)
k.showMesh()
k.setStartingRes(regionValues={1: 100.0}, zoneValues={1: 1}, fixedValues={1: False}, ipValues={1: 0.0}) # define region manually using k.addRegion()
k.invert(modErr=False, parallel=True, modelDOI=False)
